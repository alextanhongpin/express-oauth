<!DOCTYPE html>
<html>
<head>
	<title>Consent</title>
</head>
<body>

<h1>Allow <%=client.client_name%> to access your email?</h1>
<div>

	<input type="hidden" name="response_type" value="<%=response_type%>">
	<input type="hidden" name="client_id" value="<%=client_id%>">
	<input type="hidden" name="redirect_uri" value="<%=redirect_uri%>">
	<button id='submit'>Allow</button>
</div>

<script type="text/javascript">
	
	function getCredentials () {
	  return {
	    accessToken: window.localStorage.access_token,
	    refreshToken: window.localStorage.refresh_token
	  }
	}
	function hasCredentials (params) {
	  return params.accessToken && params.refreshToken
	}

	if (!hasCredentials(getCredentials())) {
		window.location.href = '/login'
	} else {
		console.log('token present')
	}

	// Note that the user has to be logged in first
	// If the user is not logged in, bring them back to the login-service
	// page with the redirect links

	// Redirect here
	const submit = document.getElementById('submit')
	submit.addEventListener('click', (evt) => {
		evt.preventDefault()

		const credentials = getCredentials()
		const request = fetch('/oauth/authorize', {
			method: 'POST',
			headers: {
				'Accept': 'application/json',
				'Content-Type': 'application/json;charset=utf-8',
				'Authorization': `Bearer ${credentials.accessToken}`
			},
			body: JSON.stringify({
				response_type: "<%=response_type%>",
				client_id: "<%=client_id%>",
				redirect_uri: "<%=redirect_uri%>"
			})
		})

		const response = request.then((res) => {
			return res.json()
		}).then((data) => {
			console.log(data)
			window.location.href = data.redirect_uri
		})
	}, false)

</script>
</body>
</html>